// Generated by CoffeeScript 1.6.3
var NodeController;

NodeController = function($scope, $routeParams, $http, $timeout) {
  var editor;
  $scope.node = NodeStorage.get($routeParams.path.replace(/---/g, "/"));
  if (!$scope.node) {
    $scope.flashInfo = "Select node from list";
  }
  editor = null;
  $scope.$on('closeEditMode', function() {
    return $scope.node.dataEdit = null;
  });
  $scope.$watch('node.name', function() {
    if ($scope.node && $scope.node.name) {
      return $http.get(window.settings.connection + "/0/node" + $scope.node.name + "/").success(function(data) {
        return $scope.node.data = data;
      }).error(function() {
        return $scope.flashError = "failed to load data for node '" + $scope.node.name + "'";
      });
    }
  });
  $scope.edit = function() {
    var dataType, error, tmp;
    $scope.node.dataEdit = $scope.node.data;
    editor = ace.edit("editor");
    editor.setTheme("ace/theme/twilight");
    dataType = "text";
    try {
      tmp = JSON.parse($scope.node.dataEdit);
      dataType = "json";
    } catch (_error) {
      error = _error;
    }
    return editor.getSession().setMode("ace/mode/" + dataType);
  };
  return $scope.save = function() {
    var nodeData;
    nodeData = editor.getValue();
    return $http({
      url: window.settings.connection + "/0/node" + $scope.node.name + "/",
      method: "POST",
      data: nodeData,
      headers: {
        'X-Zoo-Original-Version': '-1'
      }
    }).success(function() {
      $scope.flashSuccess = 'Node data saved';
      return $timeout(function() {
        return $scope.flashSuccess = null;
      }, 5000);
    }).error(function(data, status) {
      switch (status) {
        case 409:
          return $scope.flashInfo = 'Bad version';
        case 404:
          return $scope.flashError = "Node '" + $scope.node.name + "' does not exist.";
      }
    });
  };
};
